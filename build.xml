<!-- ======================================================================= -->
<!-- caGrid 1.0 SDK (3.2) Query Processor build file                         -->
<!-- ======================================================================= -->
<project name="caGrid-sdkQuery32" default="all" basedir=".">
  <import file="ivy-targets.xml"/>
  
	<!-- Environment -->
	<property environment="env" />
	<property file="${basedir}/project.properties" />
	<property file="${basedir}/build.properties" />
	<property name="globus.dir" location="${env.GLOBUS_LOCATION}" />

	<!-- build with debugging information -->
	<property name="java.debug" value="on" />
	<!-- enforce java 1.5 compliance at build time -->
	<property name="java.source" value="1.5" />


	<!-- Information -->
	<property name="project.name" value="${ant.project.name}" />
	<property name="project.jar.prefix" value="${project.name}-" />

	<!-- build output dirs -->
	<property name="build.dir" location="build" />
	<property name="build.dest" location="${build.dir}/classes" />
	<property name="build.jars.dir" location="build/lib" />

	<!-- jar names -->
	<property name="project.jar.name" value="${project.jar.prefix}core-${project.version}.jar" />

	<!-- jar files -->
	<property name="project.jar.file" value="${build.jars.dir}/${project.jar.name}" />

	<!-- source directories -->
	<property name="src.dir" location="${basedir}/src/java" />

	<!-- libraries -->
	<property name="ext.lib.dir" location="${basedir}/ext/dependencies/impl/jars" />
	<property name="lib.dir" location="${basedir}/lib/" />
	<property name="ext.authz.lib.dir" location="${basedir}/ext/dependencies/authz/jars" />
	<property name="ext.test.lib.dir" location="${basedir}/ext/dependencies/test/jars" />

	<!-- testing stuff -->
	<property name="test.dir" location="${basedir}/test" />
	<property name="test.src.dir" location="${test.dir}/src/java" />
	<property name="test.classes.dir" location="${build.dir}/test/classes" />
	<property name="test.lib.dir" location="${test.dir}/lib" />
	<property name="test.logs.dir" location="${test.dir}/logs" />
	<property name="test.project.jar" location="${build.jars.dir}/${project.jar.prefix}tests-${project.version}.jar" />

	<loadfile property="dist.revision" srcFile="./.svn/entries">
		<filterchain>
			<headfilter lines="1" skip="4" />
		</filterchain>
	</loadfile>

	<import file="test/test.xml" />

	<!-- =============================================================== -->
	<!-- The Test Classpath                                              -->
	<!-- =============================================================== -->
	<path id="test.classpath">
        <fileset dir="${lib.dir}">
            <include name="**/*.jar" />
        </fileset>
		<fileset dir="${ext.lib.dir}">
			<include name="**/*.jar" />
		</fileset>
		<fileset dir="${test.lib.dir}">
			<include name="**/*.jar" />
		</fileset>
		<fileset dir="${ext.test.lib.dir}">
			<include name="**/*.jar" />
		</fileset>
		<fileset dir="${globus.dir}/lib">
			<include name="**/*.jar" />
		</fileset>
		<pathelement location="${build.dest}" />
	</path>

	<!-- creates output directories -->
	<target name="init">
		<mkdir dir="${build.dir}" />
		<mkdir dir="${build.dest}" />
		<mkdir dir="${build.jars.dir}" />
		<mkdir dir="${test.classes.dir}" />
	</target>

	<!-- compiles the query processor source code -->
	<target name="compile" depends="init, ivy-lib, ivy-authz, ivy-impl">
		<javac srcdir="${src.dir}" destdir="${build.dest}" debug="${java.debug}" source="${java.source}">
			<classpath>
				<fileset dir="${ext.lib.dir}">
					<include name="*.jar" />
				</fileset>
				<fileset dir="${lib.dir}">
					<include name="**/*.jar" />
				</fileset>
				<fileset dir="${ext.authz.lib.dir}">
					<include name="**/*.jar" />
				</fileset>
				<fileset dir="${globus.dir}/lib">
					<include name="*.jar" />
				</fileset>
			</classpath>
			<include name="**/*.java" />
		</javac>
	</target>

	<!-- compiles the testing source code -->
	<target name="compileTests" depends="compile, ivy-test">
		<javac srcdir="${test.src.dir}" destdir="${test.classes.dir}" debug="${java.debug}" source="${java.source}">
			<classpath>
				<pathelement path="${build.dest}" />
				<fileset dir="${ext.lib.dir}">
					<include name="*.jar" />
				</fileset>
				<fileset dir="${lib.dir}">
					<include name="**/*.jar" />
				</fileset>
				<fileset dir="${ext.test.lib.dir}">
					<include name="*.jar" />
				</fileset>
				<fileset dir="${globus.dir}/lib">
					<include name="*.jar" />
				</fileset>
			</classpath>
			<include name="**/*.java" />
		</javac>
	</target>

	<!-- jars the classes -->
	<target name="jar" depends="compile" description="Builds the jar file">
		<tstamp />
		<jar destfile="${project.jar.file}">
			<fileset dir="${build.dest}">
				<include name="**/*.class" />
			</fileset>
			<fileset dir="${src.dir}">
				<include name="**/*.java" />
				<include name="caTissueModel.properties"/>
				<include name="remoteService.xml"/>
			</fileset>
			
			<manifest>
				<section name="${sqkQuery32.jar.details}">
					<attribute name="Version" value="${project.version}" />
					<attribute name="Built-At-Time" value="${TODAY} ${TSTAMP}" />
					<attribute name="SVN-URL" value="${dist.revision}" />
				</section>
			</manifest>

		</jar>
	</target>

	<!-- jars the tests -->
	<target name="jarTests" depends="compileTests" description="Builds the testing jar file">
		<jar destfile="${test.project.jar}">
			<fileset dir="${test.classes.dir}">
				<include name="**/*.class" />
			</fileset>
		</jar>
	</target>

	<!-- removes all build output -->
	<target name="clean">
		<delete dir="${build.dir}" />
	</target>

	<!-- build and jar everything -->
	<target name="all" depends="jar, jarTests" description="Builds and jars all the classes in the project" />
</project>
