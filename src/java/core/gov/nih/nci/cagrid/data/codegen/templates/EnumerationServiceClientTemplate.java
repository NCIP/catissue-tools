package gov.nih.nci.cagrid.data.codegen.templates;

public class EnumerationServiceClientTemplate
{
  protected final String NL = System.getProperties().getProperty("line.separator");
  protected final String TEXT_1 = "package ";
  protected final String TEXT_2 = ".client;" + NL + "" + NL + "import java.rmi.RemoteException;" + NL + "" + NL + "import org.apache.axis.message.addressing.EndpointReferenceType;" + NL + "import org.apache.axis.types.URI.MalformedURIException;" + NL + "" + NL + "import org.globus.gsi.GlobusCredential;" + NL + "" + NL + "/**" + NL + " * This class is autogenerated by the caGrid Data Service extension for use" + NL + " * when the data service is used with WS-Enumeration" + NL + " */" + NL + " " + NL + "public class ";
  protected final String TEXT_3 = " extends ";
  protected final String TEXT_4 = " implements ";
  protected final String TEXT_5 = " {" + NL + "" + NL + "\tpublic ";
  protected final String TEXT_6 = "(String url) throws MalformedURIException, RemoteException {" + NL + "\t\tsuper(url, null);\t" + NL + "\t}" + NL + "\t" + NL + "" + NL + "\tpublic ";
  protected final String TEXT_7 = "(String url, GlobusCredential proxy) throws MalformedURIException, RemoteException {" + NL + "\t   \tsuper(url, proxy);" + NL + "\t}" + NL + "\t" + NL + "\t" + NL + "\tpublic ";
  protected final String TEXT_8 = "(EndpointReferenceType epr) throws MalformedURIException, RemoteException {" + NL + "\t   \tsuper(epr, null);" + NL + "\t}" + NL + "\t" + NL + "\t" + NL + "\tpublic ";
  protected final String TEXT_9 = "(EndpointReferenceType epr, GlobusCredential proxy) throws MalformedURIException, RemoteException {" + NL + "\t   \tsuper(epr, proxy);" + NL + "\t}" + NL + "}";

  public String generate(Object argument)
  {
    StringBuffer stringBuffer = new StringBuffer();
     gov.nih.nci.cagrid.introduce.common.ServiceInformation serviceInfo = (gov.nih.nci.cagrid.introduce.common.ServiceInformation) argument;
		String serviceName = serviceInfo.getServices().getService()[0].getName() + "Enumeration";
		String basePackage = serviceInfo.getServices().getService()[0].getPackageName() + ".enumeration";
		String serviceClientName = basePackage + ".client." + serviceName + "Client";
		// name the new client class
		String dataSourceClassName = serviceName + "DataSourceClient";
		String interfaceName = org.xmlsoap.schemas.ws._2004._09.enumeration.DataSource.class.getName();

    stringBuffer.append(TEXT_1);
    stringBuffer.append(basePackage);
    stringBuffer.append(TEXT_2);
    stringBuffer.append(dataSourceClassName);
    stringBuffer.append(TEXT_3);
    stringBuffer.append(serviceClientName);
    stringBuffer.append(TEXT_4);
    stringBuffer.append(interfaceName);
    stringBuffer.append(TEXT_5);
    stringBuffer.append(dataSourceClassName);
    stringBuffer.append(TEXT_6);
    stringBuffer.append(dataSourceClassName);
    stringBuffer.append(TEXT_7);
    stringBuffer.append(dataSourceClassName);
    stringBuffer.append(TEXT_8);
    stringBuffer.append(dataSourceClassName);
    stringBuffer.append(TEXT_9);
    return stringBuffer.toString();
  }
}
